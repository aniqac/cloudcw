docker run -p 9042:9042 --name cassandra-test -d cassandra:latest
sudo pip install -U -r requirements.txt
source flask_venv/bin/activate


Cassandra bit:

docker cp data.csv cassandra:data.csv
docker exec -it cassandra cqlsh

CREATE KEYSPACE data WITH REPLICATION =
{'class' : 'SimpleStrategy', 'replication_factor' : 1};

CREATE TABLE data.stats (Name text PRIMARY KEY, language text);
COPY data.stats(Name,language)
FROM 'data.csv'
WITH DELIMITER=',' AND HEADER=TRUE;

COPY data.stats(Name,langauge'/data.csv'
WITH DELIMITER=',' AND HEADER=TRUE;

gcloud services enable container.googleapis.com

gcloud container clusters create cassandra --num-nodes=3 --machine-type "n1-standard-2"

wget -O cassandra-peer-service.yml http://tinyurl.com/yyxnephy

wget -O cassandra-service.yml http://tinyurl.com/y65czz8e

wget -O cassandra-replication-controller.yml http://tinyurl.com/y2crfsl8

kubectl create -f cassandra-peer-service.yml

kubectl create -f cassandra-service.yml

kubectl create -f cassandra-replication-controller.yml

kubectl get pods -l name=cassandra

kubectl scale rc cassandra --replicas=3

kubectl exec -it cassandra-24bgm -- nodetool status

get error so then copy the one that coems up

kubectl get pods -l name=cassandra

then enter one of these with replaced kubectl exec -it cassandra-24bgm -- nodetool status

kubectl cp data.csv cassandra-24bgm:/data.csv

kubectl exec -it cassandra-24bgm cqlsh

CREATE KEYSPACE data WITH REPLICATION =
{'class' : 'SimpleStrategy', 'replication_factor' : 2};

CREATE TABLE data.stats (
Name text PRIMARY KEY, language text) ;

COPY data.stats(Name,language) FROM 'data.csv'
WITH DELIMITER=',' AND HEADER=TRUE;

####

docker cp oparna.csv cassandra:oparna.csv
docker exec -it cassandra cqlsh

CREATE KEYSPACE data WITH REPLICATION =
{'class' : 'SimpleStrategy', 'replication_factor' : 1};

CREATE TABLE oparna.stats (Name text PRIMARY KEY, city text);
COPY oparna.stats(Name,city)
FROM 'oparna.csv'
WITH DELIMITER=',' AND HEADER=TRUE;

COPY oparna.stats(Name,city'/oparna.csv'
WITH DELIMITER=',' AND HEADER=TRUE;

gcloud services enable container.googleapis.com

gcloud container clusters create cassandra --num-nodes=3 --machine-type "n1-standard-2"

wget -O cassandra-peer-service.yml http://tinyurl.com/yyxnephy

wget -O cassandra-service.yml http://tinyurl.com/y65czz8e

wget -O cassandra-replication-controller.yml http://tinyurl.com/y2crfsl8

kubectl create -f cassandra-peer-service.yml

kubectl create -f cassandra-service.yml

kubectl create -f cassandra-replication-controller.yml

kubectl get pods -l name=cassandra

kubectl scale rc cassandra --replicas=3

kubectl exec -it cassandra-24bgm -- nodetool status

get error so then copy the one that coems up

kubectl get pods -l name=cassandra

then enter one of these with replaced kubectl exec -it cassandra-24bgm -- nodetool status

kubectl cp oparna.csv cassandra-24bgm:/data.csv

kubectl exec -it cassandra-24bgm cqlsh

CREATE KEYSPACE oparna WITH REPLICATION =
{'class' : 'SimpleStrategy', 'replication_factor' : 2};

CREATE TABLE oparna.stats (
Name text PRIMARY KEY, language text) ;

COPY oparna.stats(Name,language) FROM 'oparna.csv'
WITH DELIMITER=',' AND HEADER=TRUE;










CREATE TABLE data.users (
   id UUID PRIMARY KEY,
   username text,
   password text );


   INSERT INTO data.users (id, username, password)
  VALUES(
    now(),
    'Admin',
    'password');


    hash = hash(password)

  rows = session.execute("""select * from data.users where username='{}' and password='{}'""".format(username, hash))

  gcloud container clusters create cassandra --num-nodes=3 --machine-type "n1-standard-2"
